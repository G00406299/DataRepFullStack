{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Desktop\\\\MERNstack\\\\client\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState('');\n  const [isCustomWeather, setIsCustomWeather] = useState(false); // Toggle between custom and real-time data\n\n  const fetchWeatherData = async () => {\n    setError('');\n    setWeatherData(null);\n    let url;\n    if (isCustomWeather) {\n      url = `http://localhost:5000/api/customWeather?city=${encodeURIComponent(city)}`;\n    } else {\n      url = `http://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&appid=${process.env.OPENWEATHERMAP_API_KEY}&units=metric`;\n    }\n    try {\n      const response = await axios.get(url);\n      // Adjust the below line based on the structure of data you expect from each API\n      setWeatherData(isCustomWeather ? response.data : {\n        city: response.data.name,\n        temperature: response.data.main.temp,\n        weatherCondition: response.data.weather[0].description\n      });\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Error fetching weather data. Please ensure the city is correct.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isCustomWeather,\n        onChange: () => setIsCustomWeather(!isCustomWeather)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \"Use Custom Weather Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter city name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeatherData,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", weatherData.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", weatherData.weatherCondition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"pr8hULjLoXxX4FUhfwGPUtZ8NWY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Weather","_s","city","setCity","weatherData","setWeatherData","error","setError","isCustomWeather","setIsCustomWeather","fetchWeatherData","url","encodeURIComponent","process","env","OPENWEATHERMAP_API_KEY","response","get","data","name","temperature","main","temp","weatherCondition","weather","description","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","value","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/components/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Weather() {\r\n  const [city, setCity] = useState('');\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isCustomWeather, setIsCustomWeather] = useState(false); // Toggle between custom and real-time data\r\n\r\n  const fetchWeatherData = async () => {\r\n    setError('');\r\n    setWeatherData(null);\r\n\r\n    let url;\r\n    if (isCustomWeather) {\r\n      url = `http://localhost:5000/api/customWeather?city=${encodeURIComponent(city)}`;\r\n    } else {\r\n      url = `http://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&appid=${process.env.OPENWEATHERMAP_API_KEY}&units=metric`;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(url);\r\n      // Adjust the below line based on the structure of data you expect from each API\r\n      setWeatherData(isCustomWeather ? response.data : { \r\n        city: response.data.name, \r\n        temperature: response.data.main.temp, \r\n        weatherCondition: response.data.weather[0].description \r\n      });\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setError('Error fetching weather data. Please ensure the city is correct.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-container\">\r\n      <h2>Weather Forecast</h2>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isCustomWeather}\r\n          onChange={() => setIsCustomWeather(!isCustomWeather)}\r\n        />\r\n        Use Custom Weather Data\r\n      </label>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          placeholder=\"Enter city name\"\r\n        />\r\n        <button onClick={fetchWeatherData}>Search</button>\r\n      </div>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {weatherData && (\r\n        <div className=\"weather-data\">\r\n          <h3>Weather in {weatherData.city}</h3>\r\n          <p>Temperature: {weatherData.temperature}Â°C</p>\r\n          <p>Condition: {weatherData.weatherCondition}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}