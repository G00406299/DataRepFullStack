{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Desktop\\\\MERNstack\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\nimport Weather from './components/Weather';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport CustomWeather from './components/CustomWeather';\nimport AccountSettings from './components/AccountSettings';\nimport axios from 'axios'; // Import Axios or your preferred HTTP client library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null); // User data\n\n  useEffect(() => {\n    // Check if the user is already logged in when the component mounts\n    const checkLoggedIn = async () => {\n      try {\n        // Make an API request to check if the user is authenticated\n        const response = await axios.get('/api/check-auth');\n        if (response.data.isLoggedIn) {\n          setIsLoggedIn(true);\n          setUser(response.data.user); // Set user data\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  const handleLogin = async (email, password) => {\n    try {\n      // Make the login request\n      const response = await axios.post('/api/login', {\n        email,\n        password\n      });\n\n      // Set the user data received from the response\n      setUser(response.data.user);\n      setIsLoggedIn(true);\n      console.log('User is now logged in.');\n    } catch (error) {\n      // Handle login errors\n      console.error('Error logging in:', error);\n    }\n  };\n  const handleRegister = async (username, email, password) => {\n    try {\n      // Make the registration request\n      const response = await axios.post('/api/register', {\n        username,\n        email,\n        password\n      });\n\n      // Set the user data received from the response\n      setUser(response.data.user);\n      setIsLoggedIn(true);\n      console.log('User is now registered');\n    } catch (error) {\n      // Handle registration errors\n      console.error('Error registering:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      // Make an API request to log out the user\n      await axios.post('/api/logout');\n      setIsLoggedIn(false);\n      setUser(null);\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ki3p4Ug0OIeovJYgYQgFusbAAO4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","Navigate","Weather","Login","Register","CustomWeather","AccountSettings","axios","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","user","setUser","checkLoggedIn","response","get","data","error","console","handleLogin","email","password","post","log","handleRegister","username","handleLogout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\nimport Weather from './components/Weather';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport CustomWeather from './components/CustomWeather';\nimport AccountSettings from './components/AccountSettings';\nimport axios from 'axios'; // Import Axios or your preferred HTTP client library\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null); // User data\n\n  useEffect(() => {\n    // Check if the user is already logged in when the component mounts\n    const checkLoggedIn = async () => {\n      try {\n        // Make an API request to check if the user is authenticated\n        const response = await axios.get('/api/check-auth');\n\n        if (response.data.isLoggedIn) {\n          setIsLoggedIn(true);\n          setUser(response.data.user); // Set user data\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  const handleLogin = async (email, password) => {\n    try {\n      // Make the login request\n      const response = await axios.post('/api/login', { email, password });\n\n      // Set the user data received from the response\n      setUser(response.data.user);\n\n      setIsLoggedIn(true);\n      console.log('User is now logged in.');\n    } catch (error) {\n      // Handle login errors\n      console.error('Error logging in:', error);\n    }\n  };\n\n  const handleRegister = async (username, email, password) => {\n    try {\n      // Make the registration request\n      const response = await axios.post('/api/register', { username, email, password });\n\n      // Set the user data received from the response\n      setUser(response.data.user);\n\n      setIsLoggedIn(true);\n      console.log('User is now registered');\n    } catch (error) {\n      // Handle registration errors\n      console.error('Error registering:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      // Make an API request to log out the user\n      await axios.post('/api/logout');\n      setIsLoggedIn(false);\n      setUser(null);\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  return (\n    <Router>\n      {/* ... (rest of your App.js code) */}\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}