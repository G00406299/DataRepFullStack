{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Desktop\\\\MERNstack\\\\client\\\\src\\\\components\\\\CustomWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomWeather() {\n  _s();\n  const [customWeatherData, setCustomWeatherData] = useState([]);\n  const [city, setCity] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [weatherCondition, setWeatherCondition] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to fetch custom weather data from the server\n  const fetchCustomWeatherData = async () => {\n    try {\n      const response = await axios.get('/api/customWeather');\n      setCustomWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching custom weather data:', error);\n      setError('Error fetching custom weather data.');\n    }\n  };\n\n  // useEffect hook to fetch data when the component mounts\n  useEffect(() => {\n    fetchCustomWeatherData();\n  }, []);\n\n  // Function to handle form submission when adding custom weather data\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/customWeather', {\n        city,\n        temperature,\n        weatherCondition\n      });\n      setCity('');\n      setTemperature('');\n      setWeatherCondition('');\n      fetchCustomWeatherData(); // Refresh the list\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Error adding custom weather data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Custom Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Temperature\",\n        value: temperature,\n        onChange: e => setTemperature(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Weather Condition\",\n        value: weatherCondition,\n        onChange: e => setWeatherCondition(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Custom Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: customWeatherData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"City: \", item.city, \", Temperature: \", item.temperature, \", Condition: \", item.weatherCondition]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomWeather, \"yIe0TWgMu6vtK8jkE+sl3lJ51qc=\");\n_c = CustomWeather;\nexport default CustomWeather;\nvar _c;\n$RefreshReg$(_c, \"CustomWeather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CustomWeather","_s","customWeatherData","setCustomWeatherData","city","setCity","temperature","setTemperature","weatherCondition","setWeatherCondition","error","setError","fetchCustomWeatherData","response","get","data","console","handleSubmit","e","preventDefault","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","item","_id","_c","$RefreshReg$"],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/components/CustomWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CustomWeather() {\r\n    const [customWeatherData, setCustomWeatherData] = useState([]);\r\n    const [city, setCity] = useState('');\r\n    const [temperature, setTemperature] = useState('');\r\n    const [weatherCondition, setWeatherCondition] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    // Function to fetch custom weather data from the server\r\n    const fetchCustomWeatherData = async () => {\r\n        try {\r\n            const response = await axios.get('/api/customWeather');\r\n            setCustomWeatherData(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching custom weather data:', error);\r\n            setError('Error fetching custom weather data.');\r\n        }\r\n    };\r\n\r\n    // useEffect hook to fetch data when the component mounts\r\n    useEffect(() => {\r\n        fetchCustomWeatherData();\r\n    }, []);\r\n\r\n    // Function to handle form submission when adding custom weather data\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await axios.post('/api/customWeather', {\r\n                city,\r\n                temperature,\r\n                weatherCondition,\r\n            });\r\n\r\n            setCity('');\r\n            setTemperature('');\r\n            setWeatherCondition('');\r\n            fetchCustomWeatherData(); // Refresh the list\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setError('Error adding custom weather data.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <h2>Add Custom Weather Data</h2>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Temperature\"\r\n                    value={temperature}\r\n                    onChange={(e) => setTemperature(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Weather Condition\"\r\n                    value={weatherCondition}\r\n                    onChange={(e) => setWeatherCondition(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Add Custom Weather Data</button>\r\n            </form>\r\n\r\n            <h2>Custom Weather Data</h2>\r\n            <ul>\r\n                {customWeatherData.map((item) => (\r\n                    <li key={item._id}>\r\n                        City: {item.city}, Temperature: {item.temperature}, Condition: {item.weatherCondition}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomWeather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}