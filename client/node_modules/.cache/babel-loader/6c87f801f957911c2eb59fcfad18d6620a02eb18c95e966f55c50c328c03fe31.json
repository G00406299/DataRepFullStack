{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Desktop\\\\MERNstack\\\\client\\\\src\\\\components\\\\AccountSettings.js\",\n  _s = $RefreshSig$();\n// AccountSettings.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountSettings({\n  user\n}) {\n  _s();\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleUpdateUsername = async () => {\n    try {\n      if (!user || !user.email) {\n        setError('User email not available.');\n        return;\n      }\n\n      // Make an API request to update the username using email as the identifier\n      const response = await axios.put('/api/update-username', {\n        email: user.email,\n        newUsername\n      });\n      if (response.status === 200) {\n        // Username updated successfully\n        setSuccessMessage('Username successfully changed.');\n        setError('');\n        // Update the user object with the new username\n        user.username = newUsername;\n        setNewUsername('');\n      } else {\n        setError('Failed to update username. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setError('Error updating username. Please try again.');\n    }\n  };\n  const handleUpdatePassword = async () => {\n    // ... (similar logic as handleUpdateUsername)\n  };\n  const handleDeleteAccount = async () => {\n    // ... (similar logic as handleUpdateUsername)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Username\",\n        value: newUsername,\n        onChange: e => setNewUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateUsername,\n        children: \"Update Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-account-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountSettings, \"7XfEsdRU/ylL/lC2xzKBo8sGwEI=\");\n_c = AccountSettings;\nexport default AccountSettings;\nvar _c;\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AccountSettings","user","_s","newUsername","setNewUsername","newPassword","setNewPassword","successMessage","setSuccessMessage","error","setError","handleUpdateUsername","email","response","put","status","username","console","handleUpdatePassword","handleDeleteAccount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/components/AccountSettings.js"],"sourcesContent":["// AccountSettings.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AccountSettings({ user }) {\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleUpdateUsername = async () => {\r\n    try {\r\n      if (!user || !user.email) {\r\n        setError('User email not available.');\r\n        return;\r\n      }\r\n\r\n      // Make an API request to update the username using email as the identifier\r\n      const response = await axios.put('/api/update-username', {\r\n        email: user.email,\r\n        newUsername,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Username updated successfully\r\n        setSuccessMessage('Username successfully changed.');\r\n        setError('');\r\n        // Update the user object with the new username\r\n        user.username = newUsername;\r\n        setNewUsername('');\r\n      } else {\r\n        setError('Failed to update username. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating username:', error);\r\n      setError('Error updating username. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    // ... (similar logic as handleUpdateUsername)\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    // ... (similar logic as handleUpdateUsername)\r\n  };\r\n\r\n  return (\r\n    <div className=\"account-settings\">\r\n      <h2>Account Settings</h2>\r\n      <div className=\"username-section\">\r\n        <h3>Change Username</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New Username\"\r\n          value={newUsername}\r\n          onChange={(e) => setNewUsername(e.target.value)}\r\n        />\r\n        <button onClick={handleUpdateUsername}>Update Username</button>\r\n        {successMessage && <p className=\"success\">{successMessage}</p>}\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n      <div className=\"password-section\">\r\n        {/* ... (similar UI for changing password) */}\r\n      </div>\r\n      <div className=\"delete-account-section\">\r\n        {/* ... (similar UI for deleting account) */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}