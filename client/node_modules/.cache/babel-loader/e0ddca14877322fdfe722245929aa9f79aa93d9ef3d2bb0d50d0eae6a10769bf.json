{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function AccountSettings({ user }) {\n//   const [newUsername, setNewUsername] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const handleUpdateUsername = async () => {\n//     try {\n//       if (!user || !user._id) {\n//         setError('User data not available.');\n//         return;\n//       }\n\n//       const response = await axios.put('/api/update-username', {\n//         userId: user._id,\n//         newUsername,\n//       });\n\n//       if (response.status === 200) {\n//         setSuccessMessage('Username successfully changed.');\n//         setError('');\n//         user.username = newUsername;\n//         setNewUsername('');\n//       } else {\n//         setError('Failed to update username. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error updating username:', error);\n//       setError('Error updating username. Please try again.');\n//     }\n//   };\n\n//   const handleUpdatePassword = async () => {\n//     try {\n//       // Make an API request to update the password using email as the identifier\n//       await axios.put('/api/update-password', { email: user.email, newPassword });\n//       setNewPassword('');\n//       setError('');\n//     } catch (error) {\n//       console.error('Error updating password:', error);\n//       setError('Error updating password. Please try again.');\n//     }\n//   };\n\n//   const handleDeleteAccount = async () => {\n//     try {\n//       // Make an API request to delete the user's account using email as the identifier\n//       await axios.delete('/api/delete-account', { data: { email: user.email } });\n//       // Redirect to the homepage or perform any necessary actions\n//     } catch (error) {\n//       console.error('Error deleting account:', error);\n//       setError('Error deleting account. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"account-settings\">\n//       <h2>Account Settings</h2>\n//       <div className=\"username-section\">\n//         <h3>Change Username</h3>\n//         {successMessage && <p className=\"success\">{successMessage}</p>}\n//         {error && <p className=\"error\">{error}</p>}\n//         <input\n//           type=\"text\"\n//           placeholder=\"New Username\"\n//           value={newUsername}\n//           onChange={(e) => setNewUsername(e.target.value)}\n//         />\n//         <button onClick={handleUpdateUsername}>Update Username</button>\n//       </div>\n//       <div className=\"password-section\">\n//         <h3>Change Password</h3>\n//         <input\n//           type=\"password\"\n//           placeholder=\"New Password\"\n//           value={newPassword}\n//           onChange={(e) => setNewPassword(e.target.value)}\n//         />\n//         <button onClick={handleUpdatePassword}>Update Password</button>\n//       </div>\n//       <div className=\"delete-account-section\">\n//         <h3>Delete Account</h3>\n//         <button onClick={handleDeleteAccount}>Delete My Account</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AccountSettings;","map":{"version":3,"names":[],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/components/AccountSettings.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function AccountSettings({ user }) {\r\n//   const [newUsername, setNewUsername] = useState('');\r\n//   const [newPassword, setNewPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [successMessage, setSuccessMessage] = useState('');\r\n\r\n//   const handleUpdateUsername = async () => {\r\n//     try {\r\n//       if (!user || !user._id) {\r\n//         setError('User data not available.');\r\n//         return;\r\n//       }\r\n\r\n//       const response = await axios.put('/api/update-username', {\r\n//         userId: user._id,\r\n//         newUsername,\r\n//       });\r\n\r\n//       if (response.status === 200) {\r\n//         setSuccessMessage('Username successfully changed.');\r\n//         setError('');\r\n//         user.username = newUsername;\r\n//         setNewUsername('');\r\n//       } else {\r\n//         setError('Failed to update username. Please try again.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error updating username:', error);\r\n//       setError('Error updating username. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdatePassword = async () => {\r\n//     try {\r\n//       // Make an API request to update the password using email as the identifier\r\n//       await axios.put('/api/update-password', { email: user.email, newPassword });\r\n//       setNewPassword('');\r\n//       setError('');\r\n//     } catch (error) {\r\n//       console.error('Error updating password:', error);\r\n//       setError('Error updating password. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteAccount = async () => {\r\n//     try {\r\n//       // Make an API request to delete the user's account using email as the identifier\r\n//       await axios.delete('/api/delete-account', { data: { email: user.email } });\r\n//       // Redirect to the homepage or perform any necessary actions\r\n//     } catch (error) {\r\n//       console.error('Error deleting account:', error);\r\n//       setError('Error deleting account. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"account-settings\">\r\n//       <h2>Account Settings</h2>\r\n//       <div className=\"username-section\">\r\n//         <h3>Change Username</h3>\r\n//         {successMessage && <p className=\"success\">{successMessage}</p>}\r\n//         {error && <p className=\"error\">{error}</p>}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"New Username\"\r\n//           value={newUsername}\r\n//           onChange={(e) => setNewUsername(e.target.value)}\r\n//         />\r\n//         <button onClick={handleUpdateUsername}>Update Username</button>\r\n//       </div>\r\n//       <div className=\"password-section\">\r\n//         <h3>Change Password</h3>\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"New Password\"\r\n//           value={newPassword}\r\n//           onChange={(e) => setNewPassword(e.target.value)}\r\n//         />\r\n//         <button onClick={handleUpdatePassword}>Update Password</button>\r\n//       </div>\r\n//       <div className=\"delete-account-section\">\r\n//         <h3>Delete Account</h3>\r\n//         <button onClick={handleDeleteAccount}>Delete My Account</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AccountSettings;\r\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}