{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Desktop\\\\MERNstack\\\\client\\\\src\\\\components\\\\AccountSettings.js\",\n  _s = $RefreshSig$();\n// AccountSettings.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountSettings({\n  user\n}) {\n  _s();\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleUpdateUsername = async () => {\n    // ... (similar code as provided previously)\n  };\n  const handleUpdatePassword = async () => {\n    try {\n      if (!user || !user.email) {\n        setError('User email not available.');\n        return;\n      }\n\n      // Make an API request to update the password using email as the identifier\n      const response = await axios.put('/api/update-password', {\n        email: user.email,\n        newPassword\n      });\n      if (response.status === 200) {\n        // Password updated successfully\n        setSuccessMessage('Password successfully changed.');\n        setError('');\n        setNewPassword('');\n      } else {\n        setError('Failed to update password. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n      setError('Error updating password. Please try again.');\n    }\n  };\n  const handleDeleteAccount = async () => {\n    try {\n      if (!user || !user.email) {\n        setError('User email not available.');\n        return;\n      }\n\n      // Make an API request to delete the user's account using email as the identifier\n      const response = await axios.delete('/api/delete-account', {\n        data: {\n          email: user.email\n        }\n      });\n      if (response.status === 200) {\n        // Account deleted successfully\n        setSuccessMessage('Account deleted successfully.');\n        setError('');\n        // Redirect to the homepage or perform any necessary actions\n      } else {\n        setError('Failed to delete account. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting account:', error);\n      setError('Error deleting account. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdatePassword,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-account-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteAccount,\n        children: \"Delete My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountSettings, \"7XfEsdRU/ylL/lC2xzKBo8sGwEI=\");\n_c = AccountSettings;\nexport default AccountSettings;\nvar _c;\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AccountSettings","user","_s","newUsername","setNewUsername","newPassword","setNewPassword","successMessage","setSuccessMessage","error","setError","handleUpdateUsername","handleUpdatePassword","email","response","put","status","console","handleDeleteAccount","delete","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/components/AccountSettings.js"],"sourcesContent":["// AccountSettings.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AccountSettings({ user }) {\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleUpdateUsername = async () => {\r\n    // ... (similar code as provided previously)\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    try {\r\n      if (!user || !user.email) {\r\n        setError('User email not available.');\r\n        return;\r\n      }\r\n\r\n      // Make an API request to update the password using email as the identifier\r\n      const response = await axios.put('/api/update-password', {\r\n        email: user.email,\r\n        newPassword,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Password updated successfully\r\n        setSuccessMessage('Password successfully changed.');\r\n        setError('');\r\n        setNewPassword('');\r\n      } else {\r\n        setError('Failed to update password. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      setError('Error updating password. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      if (!user || !user.email) {\r\n        setError('User email not available.');\r\n        return;\r\n      }\r\n\r\n      // Make an API request to delete the user's account using email as the identifier\r\n      const response = await axios.delete('/api/delete-account', {\r\n        data: { email: user.email },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Account deleted successfully\r\n        setSuccessMessage('Account deleted successfully.');\r\n        setError('');\r\n        // Redirect to the homepage or perform any necessary actions\r\n      } else {\r\n        setError('Failed to delete account. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting account:', error);\r\n      setError('Error deleting account. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"account-settings\">\r\n      <h2>Account Settings</h2>\r\n      <div className=\"username-section\">\r\n        {/* ... (similar UI for changing username) */}\r\n      </div>\r\n      <div className=\"password-section\">\r\n        <h3>Change Password</h3>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <button onClick={handleUpdatePassword}>Update Password</button>\r\n      </div>\r\n      <div className=\"delete-account-section\">\r\n        <h3>Delete Account</h3>\r\n        <button onClick={handleDeleteAccount}>Delete My Account</button>\r\n      </div>\r\n      {successMessage && <p className=\"success\">{successMessage}</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}