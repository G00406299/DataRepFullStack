{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Desktop\\\\MERNstack\\\\client\\\\src\\\\components\\\\CustomWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomWeather() {\n  _s();\n  const [customWeatherData, setCustomWeatherData] = useState([]);\n  const [city, setCity] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [weatherCondition, setWeatherCondition] = useState('');\n\n  // Function to fetch custom weather data from the server\n  const fetchCustomWeatherData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/customWeather');\n      setCustomWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching custom weather data:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch custom weather data when the component mounts\n    fetchCustomWeatherData();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/customWeather', {\n        city,\n        temperature,\n        weatherCondition\n      });\n      if (response.status === 201) {\n        // Custom weather data added successfully\n        fetchCustomWeatherData();\n        setCity('');\n        setTemperature('');\n        setWeatherCondition('');\n      } else {\n        // Handle errors if necessary\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-weather-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Custom Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: customWeatherData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"City: \", item.city, \", Temperature: \", item.temperature, \", Condition: \", item.weatherCondition]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomWeather, \"H+Q7wVTBy2sT+8cRzGLL/bbbURY=\");\n_c = CustomWeather;\nexport default CustomWeather;\nvar _c;\n$RefreshReg$(_c, \"CustomWeather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CustomWeather","_s","customWeatherData","setCustomWeatherData","city","setCity","temperature","setTemperature","weatherCondition","setWeatherCondition","fetchCustomWeatherData","response","get","data","error","console","handleSubmit","e","preventDefault","post","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","item","_id","_c","$RefreshReg$"],"sources":["C:/Users/coolc/Desktop/MERNstack/client/src/components/CustomWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CustomWeather() {\r\n  const [customWeatherData, setCustomWeatherData] = useState([]);\r\n  const [city, setCity] = useState('');\r\n  const [temperature, setTemperature] = useState('');\r\n  const [weatherCondition, setWeatherCondition] = useState('');\r\n\r\n  // Function to fetch custom weather data from the server\r\n  const fetchCustomWeatherData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/customWeather');\r\n      setCustomWeatherData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching custom weather data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch custom weather data when the component mounts\r\n    fetchCustomWeatherData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/customWeather', {\r\n        city,\r\n        temperature,\r\n        weatherCondition,\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        // Custom weather data added successfully\r\n        fetchCustomWeatherData();\r\n        setCity('');\r\n        setTemperature('');\r\n        setWeatherCondition('');\r\n      } else {\r\n        // Handle errors if necessary\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-weather-form\">\r\n      <h2>Add Custom Weather Data</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form input fields go here */}\r\n      </form>\r\n\r\n      {/* Display custom weather data */}\r\n      <h2>Custom Weather Data</h2>\r\n      <ul>\r\n        {customWeatherData.map((item) => (\r\n          <li key={item._id}>\r\n            City: {item.city}, Temperature: {item.temperature}, Condition: {item.weatherCondition}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomWeather;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACA,MAAMe,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,yCAAyC,CAAC;MAC3ET,oBAAoB,CAACQ,QAAQ,CAACE,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd;IACAc,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMd,KAAK,CAACsB,IAAI,CAAC,yCAAyC,EAAE;QAC3Ef,IAAI;QACJE,WAAW;QACXE;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAV,sBAAsB,CAAC,CAAC;QACxBL,OAAO,CAAC,EAAE,CAAC;QACXE,cAAc,CAAC,EAAE,CAAC;QAClBE,mBAAmB,CAAC,EAAE,CAAC;MACzB,CAAC,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKsB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCvB,OAAA;MAAAuB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC3B,OAAA;MAAM4B,QAAQ,EAAEX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,eAGP3B,OAAA;MAAAuB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3B,OAAA;MAAAuB,QAAA,EACGpB,iBAAiB,CAAC0B,GAAG,CAAEC,IAAI,iBAC1B9B,OAAA;QAAAuB,QAAA,GAAmB,QACX,EAACO,IAAI,CAACzB,IAAI,EAAC,iBAAe,EAACyB,IAAI,CAACvB,WAAW,EAAC,eAAa,EAACuB,IAAI,CAACrB,gBAAgB;MAAA,GAD9EqB,IAAI,CAACC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CA/DQD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAiEtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}